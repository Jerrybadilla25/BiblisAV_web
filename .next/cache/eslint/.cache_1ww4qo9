[{"F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\api\\getBooks\\getbook.js":"1","F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\api\\getBooks\\getCharter.js":"2","F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\api\\hello.js":"3","F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\index.jsx":"4","F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\_app.js":"5"},{"size":568,"mtime":1659543887631,"results":"6","hashOfConfig":"7"},{"size":407,"mtime":1659133115856,"results":"8","hashOfConfig":"7"},{"size":170,"mtime":1658944051258,"results":"9","hashOfConfig":"7"},{"size":3749,"mtime":1659557019542,"results":"10","hashOfConfig":"7"},{"size":245,"mtime":1658945210795,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tvurpr",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\api\\getBooks\\getbook.js",[],[],"F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\api\\getBooks\\getCharter.js",[],[],"F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\api\\hello.js",[],[],"F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\index.jsx",["28"],[],"import { useState, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport styles from \"../styles/Home.module.css\";\nimport Container from \"../component/Container\";\n\nimport NavHelp from \"../component/navhelp\";\nimport Libros from \"../component/body/libros\";\nimport Cuerpo from \"../component/body/cuerpo\";\nimport NavFhone from \"../component/navFhone\";\nimport Books from \"../component/Books\";\nimport Charter from \"../component/Charter\";\n\nexport default function Home() {\n  //const RUTA = \"http://localhost:3000\";\n  const RUTA = \"http://bibliaav\"\n  const [versionView, setVersionView] = useState(false);\n  const [version, setVersion] = useState(\"Reina_Valera_1960\");\n  const [books, setBooks] = useState(null);\n  const [charterView, setCharterView] = useState(null);\n  const [numberCharter, setNumberCharter] = useState(true);\n\n  const [charterNumber, setCharterNumber] = useState(null);\n\n  const [navView, setNavView] = useState(true);\n  const [bodyView, setBodyView] = useState(true);\n  const [charterViews, setCharterViews] = useState(true);\n\n  React.useEffect(() => {\n    getBooks();\n  }, []);\n\n  const isVersionView = () => {\n    setVersionView(!versionView);\n  };\n\n  const selectBook = (id) => {\n    let data = books.find((x) => x._id === id);\n    setCharterNumber(data);\n    setCharterViews(false);\n  };\n\n  const atras = () => {\n    setCharterNumber(null);\n  };\n\n  const rewCharter = () => {\n    setCharterViews(true);\n  };\n\n  const changeNavView = () => {\n    setNavView(!navView);\n    setBodyView(!bodyView);\n  };\n\n  const getCharter = async (id) => {\n    try {\n      const data = await fetch(`${RUTA}/api/getBooks/getCharter`, {\n        method: \"POST\",\n        body: JSON.stringify({ version: version, idCharter: id }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const res = await data.json();\n      setCharterView(res);\n      setCharterNumber(null);\n      setNavView(!navView);\n      setCharterViews(true);\n      setBodyView(!bodyView);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getBooks = async () => {\n    try {\n      const data = await fetch(`${RUTA}/api/getBooks/getbook`, {\n        method: \"POST\",\n        body: JSON.stringify({ version: version }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const res = await data.json();\n      setBooks(res.arrayBook);\n      setCharterView(res.char);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      {navView ? (\n        <NavFhone changeNavView={changeNavView} />\n      ) : (\n        <>\n          {charterViews ? (\n            <Books\n              books={books}\n              changeNavView={changeNavView}\n              selectBook={selectBook}\n            />\n          ) : (\n            <Charter\n              charterNumber={charterNumber}\n              rewCharter={rewCharter}\n              getCharter={getCharter}\n            />\n          )}\n        </>\n      )}\n\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-md-3 col-xl-2 display-none\">\n          <Libros\n            books={books}\n            selectBook={selectBook}\n            charterNumber={charterNumber}\n            atras={atras}\n            getCharter={getCharter}\n          />\n        </div>\n        <div className=\"col-sm-12 col-md-7 col-xl-8 body-per\">\n          {bodyView ? <Cuerpo charterView={charterView} /> : <h6></h6>}\n        </div>\n        <div className=\"col-sm-12 col-md-2 col-xl-2 box-libro display-none\"></div>\n      </div>\n    </Container>\n  );\n}\n\n/*\n <NavHelp versionView={versionView} isVersionView={isVersionView}/>\n */\n","F:\\PROYECTOS\\NEXTJS\\biblia_av_web\\pages\\_app.js",[],[],{"ruleId":"29","severity":1,"message":"30","line":31,"column":6,"nodeType":"31","endLine":31,"endColumn":8,"suggestions":"32"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getBooks'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [getBooks]",{"range":"36","text":"37"},[1127,1129],"[getBooks]"]